/**
 * 汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，就是用字符串模拟这个指令的运算结果。对于一个给定的字符序列S，
 * 请你把其循环左移K位后的序列输出
 * 。例如，字符序列S=”abcXYZdef”,要求输出循环左移3位后的结果，即“XYZdefabc”。是不是很简单？OK，搞定它！
 * 
 */
public class Demo43 {
	public static void main(String[] args) {
		System.out.println(LeftRotateString("abcXYZdef", 3));
	}

	public static String LeftRotateString(String str, int n) {
		if (str == null || n < 0 || n > str.length()) {
			return "";
		}
		char[] chars = str.toCharArray();
		int i = 0, j = n - 1;
		swapChars(chars, i, j);
		i = n;
		j = chars.length - 1;
		swapChars(chars, i, j);
		i = 0;
		j = chars.length - 1;
		swapChars(chars, i, j);

		return new String(chars);
	}
	
	public static void swapChars(char[] chars, int i, int j){
		while (i < j) {
			char temp = chars[i];
			chars[i++] = chars[j];
			chars[j--] = temp;
		}
	}
}
